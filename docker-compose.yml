version: "3.7"

services:
  traefik:
    image: traefik:2.1
    command: "--configFile=/conf/traefik.toml"
    restart: always
    environment:
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    labels:
      - "traefik.enable=false"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/conf
      - /secrets/ssl:/ssl
    networks:
      - web

  bitwarden:
    image: bitwardenrs/server:alpine
    restart: always
    environment:
      - ROCKET_WORKERS=2
      - ROCKET_ENV=prod
    labels:
      - "traefik.http.routers.bitwarden.entrypoints=https"
      - "traefik.http.routers.bitwarden.tls.certresolver=ssl"
      - "traefik.http.routers.bitwarden.tls.domains[0].main=*.${ROOT_DOMAIN}"
      - "traefik.http.routers.bitwarden.service=bitwarden"
      - "traefik.http.services.bitwarden.loadbalancer.server.port=80"
      - "traefik.http.routers.bitwarden-ws.rule=Host(`bitwarden.${ROOT_DOMAIN}`) && Path(`/notifications/hub`)"
      - "traefik.http.routers.bitwarden-ws.entrypoints=https"
      - "traefik.http.routers.bitwarden-ws.tls.certresolver=ssl"
      - "traefik.http.routers.bitwarden-ws.tls.domains[0].main=*.${ROOT_DOMAIN}"
      - "traefik.http.routers.bitwarden-ws.service=bitwarden-ws"
      - "traefik.http.services.bitwarden-ws.loadbalancer.server.port=3012"
    volumes:
      - /data/bw-data/:/data/
      - /cache/bw_icon/:/cache/bw_icon
    networks:
      - web
    depends_on:
      - "rclone"

  golinks:
    image: prologic/golinks
    restart: always
    command:
      - -dbpath=/data
      - -fqdn=golinks.${ROOT_DOMAIN}
    labels:
      - "traefik.http.routers.golinks.entrypoints=https"
      - "traefik.http.routers.golinks.tls.certresolver=ssl"
      - "traefik.http.routers.golinks.tls.domains[0].main=*.${ROOT_DOMAIN}"
    volumes:
      - /data/golinks/:/data/
    networks:
      - web
    depends_on:
      - "rclone"

  whl:
    image: nrjais/whl
    restart: always
    labels:
      - "traefik.http.routers.whl.entrypoints=https"
      - "traefik.http.routers.whl.tls.certresolver=ssl"
      - "traefik.http.routers.whl.tls.domains[0].main=*.${ROOT_DOMAIN}"
    volumes:
      - /blog:/blog
      - ./whl:/app/config
    networks:
      - web

  blog:
    image: m3ng9i/ran
    restart: always
    command:
      - -404=/404.html
    labels:
      - "traefik.http.routers.blog.entrypoints=https"
      - "traefik.http.routers.blog.tls.certresolver=ssl"
      - "traefik.http.routers.blog.tls.domains[0].main=*.${ROOT_DOMAIN}"
      - "traefik.http.routers.blog.rule=Host(`${ROOT_DOMAIN}`)"
    volumes:
      - /blog:/web:ro
    networks:
      - web
    depends_on:
      - "whl"

  logs:
    image: amir20/dozzle
    restart: always
    labels:
      - "traefik.http.routers.logs.entrypoints=https"
      - "traefik.http.routers.logs.tls.certresolver=ssl"
      - "traefik.http.routers.logs.middlewares=auth@file"
      - "traefik.http.services.logs.loadbalancer.server.port=8080"
      - "traefik.http.routers.logs.tls.domains[0].main=*.${ROOT_DOMAIN}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web

  rclone:
    build: rclone
    restart: always
    labels:
      - "traefik.enable=false"
    volumes:
      - /data/:/data/

  wg:
    image: subspacecloud/subspace:latest
    cap_add:
      - NET_ADMIN
    network_mode: host
    restart: always
    environment:
      - SUBSPACE_HTTP_HOST=wg.${ROOT_DOMAIN}
      - SUBSPACE_HTTP_INSECURE=true
      - SUBSPACE_LETSENCRYPT=false
    volumes:
      - /usr/bin/wg:/usr/bin/wg
      - /data/wg:/data

networks:
  web:
